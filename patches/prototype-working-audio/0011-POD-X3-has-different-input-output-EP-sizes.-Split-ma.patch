From a5131178e3cfefdc8360ae5e563286a3034c5300 Mon Sep 17 00:00:00 2001
From: Andrej Krutak <dev@andree.sk>
Date: Mon, 16 Nov 2015 21:26:18 +0100
Subject: [PATCH 11/14] POD X3 has different input/output EP sizes. Split
 max_packet_size in snd_line6_pcm to reflect it.

Additionally, POD X3 records 8 channels.
---
 sound/usb/line6/capture.c  | 14 ++++++++------
 sound/usb/line6/driver.c   |  2 +-
 sound/usb/line6/pcm.c      | 27 ++++++++++++++++-----------
 sound/usb/line6/pcm.h      |  3 ++-
 sound/usb/line6/playback.c |  2 +-
 sound/usb/line6/podhd.c    |  5 +++--
 6 files changed, 31 insertions(+), 22 deletions(-)

diff --git a/sound/usb/line6/capture.c b/sound/usb/line6/capture.c
index 0966b92..4160271 100644
--- a/sound/usb/line6/capture.c
+++ b/sound/usb/line6/capture.c
@@ -44,13 +44,13 @@ static int submit_audio_in_urb(struct snd_line6_pcm *line6pcm)
 		struct usb_iso_packet_descriptor *fin =
 		    &urb_in->iso_frame_desc[i];
 		fin->offset = urb_size;
-		fin->length = line6pcm->max_packet_size;
-		urb_size += line6pcm->max_packet_size;
+		fin->length = line6pcm->max_packet_size_in;
+		urb_size += line6pcm->max_packet_size_in;
 	}
 
 	urb_in->transfer_buffer =
 	    line6pcm->in.buffer +
-	    index * LINE6_ISO_PACKETS * line6pcm->max_packet_size;
+	    index * LINE6_ISO_PACKETS * line6pcm->max_packet_size_in;
 	urb_in->transfer_buffer_length = urb_size;
 	urb_in->context = line6pcm;
 
@@ -173,15 +173,17 @@ static void audio_in_callback(struct urb *urb)
 		fbuf = urb->transfer_buffer + fin->offset;
 		fsize = fin->actual_length;
 
-		if (fsize > line6pcm->max_packet_size) {
+		if (fsize > line6pcm->max_packet_size_in) {
 			dev_err(line6pcm->line6->ifcdev,
 				"driver and/or device bug: packet too large (%d > %d)\n",
-				fsize, line6pcm->max_packet_size);
+				fsize, line6pcm->max_packet_size_in);
 		}
 
 		length += fsize;
 
-		/* the following assumes LINE6_ISO_PACKETS == 1: */
+#if LINE6_ISO_PACKETS != 1
+# error "The following assumes LINE6_ISO_PACKETS == 1"
+#endif
 		line6pcm->prev_fbuf = fbuf;
 		line6pcm->prev_fsize = fsize;
 
diff --git a/sound/usb/line6/driver.c b/sound/usb/line6/driver.c
index f2eda04..4293216 100644
--- a/sound/usb/line6/driver.c
+++ b/sound/usb/line6/driver.c
@@ -494,7 +494,7 @@ static void line6_get_interval(struct usb_line6 *line6)
 			line6->iso_buffers = USB_HIGH_ISO_BUFFERS;
 		}
 
-		line6->max_packet_size = le16_to_cpu(ep->desc.wMaxPacketSize); /* TODO: This should be used also for input?! */
+		line6->max_packet_size = le16_to_cpu(ep->desc.wMaxPacketSize);
 	} else {
 		dev_err(line6->ifcdev,
 			"endpoint not available, using fallback values");
diff --git a/sound/usb/line6/pcm.c b/sound/usb/line6/pcm.c
index f873a0b..ded39b3 100644
--- a/sound/usb/line6/pcm.c
+++ b/sound/usb/line6/pcm.c
@@ -150,13 +150,17 @@ get_stream(struct snd_line6_pcm *line6pcm, int direction)
  * call this in line6pcm.state_change mutex
  */
 static int line6_buffer_acquire(struct snd_line6_pcm *line6pcm,
-				struct line6_pcm_stream *pstr, int type)
+				struct line6_pcm_stream *pstr, int direction, int type)
 {
+	const int pkt_size =
+		(direction == SNDRV_PCM_STREAM_PLAYBACK) ?
+			line6pcm->max_packet_size_out :
+			line6pcm->max_packet_size_in;
+
 	/* Invoked multiple times in a row so allocate once only */
 	if (!test_and_set_bit(type, &pstr->opened) && !pstr->buffer) {
 		pstr->buffer = kmalloc(line6pcm->line6->iso_buffers *
-							   LINE6_ISO_PACKETS *
-							   line6pcm->max_packet_size, GFP_KERNEL);
+							   LINE6_ISO_PACKETS * pkt_size, GFP_KERNEL);
 		if (!pstr->buffer)
 			return -ENOMEM;
 	}
@@ -286,10 +290,11 @@ int line6_pcm_acquire(struct snd_line6_pcm *line6pcm, int type)
 	struct line6_pcm_stream *pstr;
 	int ret = 0, dir;
 
+	/* TODO: We should assert SNDRV_PCM_STREAM_PLAYBACK/CAPTURE values */
 	mutex_lock(&line6pcm->state_mutex);
 	for (dir = 0; dir < 2; dir++) {
 		pstr = get_stream(line6pcm, dir);
-		ret = line6_buffer_acquire(line6pcm, pstr, type);
+		ret = line6_buffer_acquire(line6pcm, pstr, dir, type);
 		if (ret < 0)
 			goto error;
 		if (!pstr->running)
@@ -334,7 +339,7 @@ int snd_line6_hw_params(struct snd_pcm_substream *substream,
 	struct line6_pcm_stream *pstr = get_stream(line6pcm, substream->stream);
 
 	mutex_lock(&line6pcm->state_mutex);
-	ret = line6_buffer_acquire(line6pcm, pstr, LINE6_STREAM_PCM);
+	ret = line6_buffer_acquire(line6pcm, pstr, substream->stream, LINE6_STREAM_PCM);
 	if (ret < 0)
 		goto error;
 
@@ -525,12 +530,12 @@ int line6_init_pcm(struct usb_line6 *line6,
 	line6pcm->volume_monitor = 255;
 	line6pcm->line6 = line6;
 
-	/* Read and write buffers are sized identically, so choose minimum */
-	line6pcm->max_packet_size = min(
-			usb_maxpacket(line6->usbdev,
-				usb_rcvisocpipe(line6->usbdev, ep_read), 0),
-			usb_maxpacket(line6->usbdev,
-				usb_sndisocpipe(line6->usbdev, ep_write), 1));
+	line6pcm->max_packet_size_in =
+		usb_maxpacket(line6->usbdev,
+			usb_rcvisocpipe(line6->usbdev, ep_read), 0);
+	line6pcm->max_packet_size_out =
+		usb_maxpacket(line6->usbdev,
+			usb_sndisocpipe(line6->usbdev, ep_write), 1);
 
 	spin_lock_init(&line6pcm->out.lock);
 	spin_lock_init(&line6pcm->in.lock);
diff --git a/sound/usb/line6/pcm.h b/sound/usb/line6/pcm.h
index 38bf4df..5c1df43 100644
--- a/sound/usb/line6/pcm.h
+++ b/sound/usb/line6/pcm.h
@@ -159,7 +159,8 @@ struct snd_line6_pcm {
 	int prev_fsize;
 
 	/* Maximum size of USB packet */
-	int max_packet_size;
+	int max_packet_size_in;
+	int max_packet_size_out;
 
 	/* PCM playback volume (left and right) */
 	int volume_playback[2];
diff --git a/sound/usb/line6/playback.c b/sound/usb/line6/playback.c
index ee04106..a831935 100644
--- a/sound/usb/line6/playback.c
+++ b/sound/usb/line6/playback.c
@@ -196,7 +196,7 @@ static int submit_audio_out_urb(struct snd_line6_pcm *line6pcm)
 	urb_frames = urb_size / bytes_per_frame;
 	urb_out->transfer_buffer =
 	    line6pcm->out.buffer +
-	    index * LINE6_ISO_PACKETS * line6pcm->max_packet_size;
+	    index * LINE6_ISO_PACKETS * line6pcm->max_packet_size_out;
 	urb_out->transfer_buffer_length = urb_size;
 	urb_out->context = line6pcm;
 
diff --git a/sound/usb/line6/podhd.c b/sound/usb/line6/podhd.c
index 97fed88..cb822ff 100644
--- a/sound/usb/line6/podhd.c
+++ b/sound/usb/line6/podhd.c
@@ -154,8 +154,9 @@ static struct line6_pcm_properties podhd_pcm_properties = {
 				 .rates = SNDRV_PCM_RATE_48000,
 				 .rate_min = 48000,
 				 .rate_max = 48000,
-				 .channels_min = 2,
-				 .channels_max = 2,
+				 /* 1+2: Main signal (out), 3+4: Tone 1, 5+6: Tone 2, 7+8: raw */
+				 .channels_min = 8,
+				 .channels_max = 8,
 				 .buffer_bytes_max = 60000,
 				 .period_bytes_min = 64,
 				 .period_bytes_max = 8192,
-- 
1.9.1

