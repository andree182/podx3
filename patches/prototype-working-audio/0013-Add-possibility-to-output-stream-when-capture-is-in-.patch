From 8e9fabe63e2291d940260cb868b5561e56b65217 Mon Sep 17 00:00:00 2001
From: Andrej Krutak <dev@andree.sk>
Date: Tue, 17 Nov 2015 20:54:36 +0100
Subject: [PATCH 13/14] Add possibility to output stream, when capture is in
 progress.

E.g. POD X3 seems get stuck (until reset) when data are only polled and nothing
is sent to output. Probably it's some kind of synchronization mechanism in hardware
missing some robustness...
---
 sound/usb/line6/driver.h |  4 +++-
 sound/usb/line6/pcm.c    | 22 +++++++++++++++++++---
 sound/usb/line6/pcm.h    |  1 +
 sound/usb/line6/podhd.c  |  2 +-
 4 files changed, 24 insertions(+), 5 deletions(-)

diff --git a/sound/usb/line6/driver.h b/sound/usb/line6/driver.h
index 9f78959..acffc16 100644
--- a/sound/usb/line6/driver.h
+++ b/sound/usb/line6/driver.h
@@ -24,7 +24,7 @@
 
 /* USB 2.0+ speed configuration */
 #define USB_HIGH_INTERVALS_PER_SECOND (8000)
-#define USB_HIGH_ISO_BUFFERS (10)
+#define USB_HIGH_ISO_BUFFERS (16)
 
 /* Fallback USB interval and max packet size values */
 #define LINE6_FALLBACK_INTERVAL (10)
@@ -105,6 +105,8 @@ enum {
 	LINE6_CAP_HWMON =	1 << 2,
 	/* device uses raw MIDI via USB */
 	LINE6_CAP_CONTROL_LEGACY = 1 << 3,
+	/* device requires output data when input is read */
+	LINE6_CAP_IN_NEEDS_OUT = 1 << 4,
 };
 
 /*
diff --git a/sound/usb/line6/pcm.c b/sound/usb/line6/pcm.c
index d60acc3..649a6983 100644
--- a/sound/usb/line6/pcm.c
+++ b/sound/usb/line6/pcm.c
@@ -147,7 +147,7 @@ get_stream(struct snd_line6_pcm *line6pcm, int direction)
 }
 
 /* allocate a buffer if not opened yet;
- * call this in line6pcm.state_change mutex
+ * call this in line6pcm.state_mutex
  */
 static int line6_buffer_acquire(struct snd_line6_pcm *line6pcm,
 				struct line6_pcm_stream *pstr, int direction, int type)
@@ -168,12 +168,11 @@ static int line6_buffer_acquire(struct snd_line6_pcm *line6pcm,
 }
 
 /* free a buffer if all streams are closed;
- * call this in line6pcm.state_change mutex
+ * call this in line6pcm.state_mutex
  */
 static void line6_buffer_release(struct snd_line6_pcm *line6pcm,
 				 struct line6_pcm_stream *pstr, int type)
 {
-
 	clear_bit(type, &pstr->opened);
 	if (!pstr->opened) {
 		line6_wait_clear_audio_urbs(line6pcm, pstr);
@@ -200,6 +199,7 @@ static int line6_stream_start(struct snd_line6_pcm *line6pcm, int direction,
 		else
 			ret = line6_submit_audio_in_all_urbs(line6pcm);
 	}
+
 	if (ret < 0)
 		clear_bit(type, &pstr->running);
 	spin_unlock_irqrestore(&pstr->lock, flags);
@@ -241,6 +241,15 @@ int snd_line6_trigger(struct snd_pcm_substream *substream, int cmd)
 		switch (cmd) {
 		case SNDRV_PCM_TRIGGER_START:
 		case SNDRV_PCM_TRIGGER_RESUME:
+			if ((s->stream == SNDRV_PCM_STREAM_CAPTURE) &&
+				(line6pcm->line6->properties->capabilities &
+					LINE6_CAP_IN_NEEDS_OUT)
+			)
+			{
+				err = line6_pcm_acquire(line6pcm, LINE6_STREAM_CAPTURE_HELPER);
+				if (err < 0)
+					return err;
+			}
 			err = line6_stream_start(line6pcm, s->stream,
 						 LINE6_STREAM_PCM);
 			if (err < 0)
@@ -249,6 +258,13 @@ int snd_line6_trigger(struct snd_pcm_substream *substream, int cmd)
 
 		case SNDRV_PCM_TRIGGER_STOP:
 		case SNDRV_PCM_TRIGGER_SUSPEND:
+			if ((s->stream == SNDRV_PCM_STREAM_CAPTURE) &&
+				(line6pcm->line6->properties->capabilities &
+					LINE6_CAP_IN_NEEDS_OUT)
+			)
+			{
+				line6_pcm_release(line6pcm, LINE6_STREAM_CAPTURE_HELPER);
+			}
 			line6_stream_stop(line6pcm, s->stream,
 					  LINE6_STREAM_PCM);
 			break;
diff --git a/sound/usb/line6/pcm.h b/sound/usb/line6/pcm.h
index 58d36f9..d174e6c 100644
--- a/sound/usb/line6/pcm.h
+++ b/sound/usb/line6/pcm.h
@@ -72,6 +72,7 @@ enum {
 	LINE6_STREAM_PCM,
 	LINE6_STREAM_MONITOR,
 	LINE6_STREAM_IMPULSE,
+	LINE6_STREAM_CAPTURE_HELPER,
 };
 
 /* misc bit flags for PCM operation */
diff --git a/sound/usb/line6/podhd.c b/sound/usb/line6/podhd.c
index 9ae8e9f2..d73106e 100644
--- a/sound/usb/line6/podhd.c
+++ b/sound/usb/line6/podhd.c
@@ -418,7 +418,7 @@ static const struct line6_properties podhd_properties_table[] = {
 		.id = "PODX3",
 		.name = "POD X3",
 		.capabilities	= LINE6_CAP_CONTROL
-				| LINE6_CAP_PCM | LINE6_CAP_HWMON,
+				| LINE6_CAP_PCM | LINE6_CAP_HWMON | LINE6_CAP_IN_NEEDS_OUT,
 		.altsetting = 1,
 		.ep_ctrl_r = 0x81,
 		.ep_ctrl_w = 0x01,
-- 
1.9.1

