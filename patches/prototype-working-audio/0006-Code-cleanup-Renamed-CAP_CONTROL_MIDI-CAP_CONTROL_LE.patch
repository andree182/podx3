From eed23f3cdedad852f6aec334e440fa395df52928 Mon Sep 17 00:00:00 2001
From: Andrej Krutak <dev@andree.sk>
Date: Wed, 20 May 2015 19:40:25 +0200
Subject: [PATCH 06/14] Code cleanup Renamed CAP_CONTROL_MIDI ->
 CAP_CONTROL_LEGACY for better clarity

---
 sound/usb/line6/driver.c | 10 +++++++++-
 sound/usb/line6/driver.h | 39 +++++++++++++++++++++++----------------
 sound/usb/line6/pod.c    | 14 +++++++-------
 sound/usb/line6/podhd.c  | 10 ++++++++--
 sound/usb/line6/variax.c |  4 ++--
 5 files changed, 49 insertions(+), 28 deletions(-)

diff --git a/sound/usb/line6/driver.c b/sound/usb/line6/driver.c
index 19fc5ad..0539b7f 100644
--- a/sound/usb/line6/driver.c
+++ b/sound/usb/line6/driver.c
@@ -273,7 +273,7 @@ static void line6_data_received(struct urb *urb)
 		return;
 	}
 
-	if (line6->properties->capabilities & LINE6_CAP_CONTROL_MIDI) {
+	if (line6->properties->capabilities & LINE6_CAP_CONTROL_LEGACY) {
 		struct midi_buffer *mb = &line6->line6midi->midibuf_in;
 		int done;
 
@@ -508,6 +508,14 @@ static int line6_init_cap_control(struct usb_line6 *line6)
 	if (!line6->buffer_message)
 		return -ENOMEM;
 
+	if (
+		(line6->properties->capabilities & LINE6_CAP_CONTROL) &&
+		!(line6->properties->capabilities & LINE6_CAP_CONTROL_LEGACY)) {
+		line6->packet_buffer = kmalloc(LINE6_PACKET_MAXLEN, GFP_KERNEL);
+		if (!line6->packet_buffer)
+			return -ENOMEM;
+	}
+
 	line6->urb_listen = usb_alloc_urb(0, GFP_KERNEL);
 	if (!line6->urb_listen)
 		return -ENOMEM;
diff --git a/sound/usb/line6/driver.h b/sound/usb/line6/driver.h
index 18d6c5d..6f5e26f 100644
--- a/sound/usb/line6/driver.h
+++ b/sound/usb/line6/driver.h
@@ -18,39 +18,40 @@
 
 #include "midi.h"
 
-#define USB_INTERVALS_PER_SECOND 1000
+#define USB_INTERVALS_PER_SECOND (1000)
 
 /* Fallback USB interval and max packet size values */
-#define LINE6_FALLBACK_INTERVAL 10
-#define LINE6_FALLBACK_MAXPACKETSIZE 16
+#define LINE6_FALLBACK_INTERVAL (10)
+#define LINE6_FALLBACK_MAXPACKETSIZE (16)
 
-#define LINE6_TIMEOUT 1
-#define LINE6_BUFSIZE_LISTEN 64
-#define LINE6_MESSAGE_MAXLEN 256
+#define LINE6_TIMEOUT (1)
+#define LINE6_BUFSIZE_LISTEN (64)
+#define LINE6_MESSAGE_MAXLEN (256)
+#define LINE6_PACKET_MAXLEN (8192)
 
 /*
 	Line 6 MIDI control commands
 */
-#define LINE6_PARAM_CHANGE   0xb0
-#define LINE6_PROGRAM_CHANGE 0xc0
-#define LINE6_SYSEX_BEGIN    0xf0
-#define LINE6_SYSEX_END      0xf7
-#define LINE6_RESET          0xff
+#define LINE6_PARAM_CHANGE   (0xb0)
+#define LINE6_PROGRAM_CHANGE (0xc0)
+#define LINE6_SYSEX_BEGIN    (0xf0)
+#define LINE6_SYSEX_END      (0xf7)
+#define LINE6_RESET          (0xff)
 
 /*
 	MIDI channel for messages initiated by the host
 	(and eventually echoed back by the device)
 */
-#define LINE6_CHANNEL_HOST   0x00
+#define LINE6_CHANNEL_HOST   (0x00)
 
 /*
 	MIDI channel for messages initiated by the device
 */
-#define LINE6_CHANNEL_DEVICE 0x02
+#define LINE6_CHANNEL_DEVICE (0x02)
 
-#define LINE6_CHANNEL_UNKNOWN 5	/* don't know yet what this is good for */
+#define LINE6_CHANNEL_UNKNOWN (5)	/* don't know yet what this is good for */
 
-#define LINE6_CHANNEL_MASK 0x0f
+#define LINE6_CHANNEL_MASK (0x0f)
 
 #define CHECK_STARTUP_PROGRESS(x, n)	\
 do {					\
@@ -97,7 +98,7 @@ enum {
 	/* device supports hardware monitoring */
 	LINE6_CAP_HWMON =	1 << 2,
 	/* device uses raw MIDI via USB */
-	LINE6_CAP_CONTROL_MIDI = 1 << 3,
+	LINE6_CAP_CONTROL_LEGACY = 1 << 3,
 };
 
 /*
@@ -143,6 +144,12 @@ struct usb_line6 {
 	/* Length of message to be processed */
 	int message_length;
 
+	/* PODHD: Buffer for the packets to be processed */
+	unsigned char *packet_buffer;
+
+	/* PODHD: Length of packet to be processed */
+	int packet_length;
+
 	void (*process_message)(struct usb_line6 *);
 	void (*disconnect)(struct usb_line6 *line6);
 };
diff --git a/sound/usb/line6/pod.c b/sound/usb/line6/pod.c
index a6a90f9..5c3bc59 100644
--- a/sound/usb/line6/pod.c
+++ b/sound/usb/line6/pod.c
@@ -476,7 +476,7 @@ static const struct line6_properties pod_properties_table[] = {
 		.id = "BassPODxt",
 		.name = "BassPODxt",
 		.capabilities	= LINE6_CAP_CONTROL
-				| LINE6_CAP_CONTROL_MIDI
+				| LINE6_CAP_CONTROL_LEGACY
 				| LINE6_CAP_PCM
 				| LINE6_CAP_HWMON,
 		.altsetting = 5,
@@ -489,7 +489,7 @@ static const struct line6_properties pod_properties_table[] = {
 		.id = "BassPODxtLive",
 		.name = "BassPODxt Live",
 		.capabilities	= LINE6_CAP_CONTROL
-				| LINE6_CAP_CONTROL_MIDI
+				| LINE6_CAP_CONTROL_LEGACY
 				| LINE6_CAP_PCM
 				| LINE6_CAP_HWMON,
 		.altsetting = 1,
@@ -502,7 +502,7 @@ static const struct line6_properties pod_properties_table[] = {
 		.id = "BassPODxtPro",
 		.name = "BassPODxt Pro",
 		.capabilities	= LINE6_CAP_CONTROL
-				| LINE6_CAP_CONTROL_MIDI
+				| LINE6_CAP_CONTROL_LEGACY
 				| LINE6_CAP_PCM
 				| LINE6_CAP_HWMON,
 		.altsetting = 5,
@@ -515,7 +515,7 @@ static const struct line6_properties pod_properties_table[] = {
 		.id = "PocketPOD",
 		.name = "Pocket POD",
 		.capabilities	= LINE6_CAP_CONTROL
-				| LINE6_CAP_CONTROL_MIDI,
+				| LINE6_CAP_CONTROL_LEGACY,
 		.altsetting = 0,
 		.ep_ctrl_r = 0x82,
 		.ep_ctrl_w = 0x02,
@@ -525,7 +525,7 @@ static const struct line6_properties pod_properties_table[] = {
 		.id = "PODxt",
 		.name = "PODxt",
 		.capabilities	= LINE6_CAP_CONTROL
-				| LINE6_CAP_CONTROL_MIDI
+				| LINE6_CAP_CONTROL_LEGACY
 				| LINE6_CAP_PCM
 				| LINE6_CAP_HWMON,
 		.altsetting = 5,
@@ -538,7 +538,7 @@ static const struct line6_properties pod_properties_table[] = {
 		.id = "PODxtLive",
 		.name = "PODxt Live",
 		.capabilities	= LINE6_CAP_CONTROL
-				| LINE6_CAP_CONTROL_MIDI
+				| LINE6_CAP_CONTROL_LEGACY
 				| LINE6_CAP_PCM
 				| LINE6_CAP_HWMON,
 		.altsetting = 1,
@@ -551,7 +551,7 @@ static const struct line6_properties pod_properties_table[] = {
 		.id = "PODxtPro",
 		.name = "PODxt Pro",
 		.capabilities	= LINE6_CAP_CONTROL
-				| LINE6_CAP_CONTROL_MIDI
+				| LINE6_CAP_CONTROL_LEGACY
 				| LINE6_CAP_PCM
 				| LINE6_CAP_HWMON,
 		.altsetting = 5,
diff --git a/sound/usb/line6/podhd.c b/sound/usb/line6/podhd.c
index 5837ad0..cdc9260 100644
--- a/sound/usb/line6/podhd.c
+++ b/sound/usb/line6/podhd.c
@@ -72,14 +72,18 @@ struct usb_line6_podhd {
  * in:  14 00 01 00|04 00 0A 03 01 40 00 22 00 00 00 00 03 00 00 00 00 00 00 00
 **/
 
-struct usb_line6_podhd_frame {
-	u8 data_len;
+struct usb_line6_podhd_message {
+	u8 packet_data_len;
 	u8 unkn1;
 #define PODHD_MSG_FLAG_FIRST (0x01)
 #define PODHD_MSG_FLAG_FOLLOWUP (0x04)
 	u8 flags;
 	u8 unkn2;
 
+	u8 packet_data[];
+} __attribute__((packed));
+
+struct usb_line6_podhd_packet {
 #define PODHD_PKT_TYPE_FULL_CONFIG 0x01
 #define PODHD_PKT_TYPE_SET_EFFECT 0x02
 #define PODHD_PKT_TYPE_INIT 0x03 /* ??? */
@@ -219,6 +223,7 @@ static int podhd_dev_start(struct usb_line6_podhd *pod)
 		return ret;
 	}
 
+	/* NOTE: looks like some kind of ping message */
 	ret = usb_control_msg(usbdev, usb_rcvctrlpipe(usbdev, 0), 0x67,
 					USB_TYPE_VENDOR | USB_RECIP_DEVICE | USB_DIR_IN,
 					0x11, 0x0,
@@ -436,3 +441,4 @@ module_usb_driver(podhd_driver);
 
 MODULE_DESCRIPTION("Line 6 PODHD USB driver");
 MODULE_LICENSE("GPL");
+
diff --git a/sound/usb/line6/variax.c b/sound/usb/line6/variax.c
index 0c4512d..770b1eb 100644
--- a/sound/usb/line6/variax.c
+++ b/sound/usb/line6/variax.c
@@ -260,7 +260,7 @@ static const struct line6_properties variax_properties_table[] = {
 		.id = "PODxtLive",
 		.name = "PODxt Live",
 		.capabilities	= LINE6_CAP_CONTROL
-				| LINE6_CAP_CONTROL_MIDI,
+				| LINE6_CAP_CONTROL_LEGACY,
 		.altsetting = 1,
 		.ep_ctrl_r = 0x86,
 		.ep_ctrl_w = 0x05,
@@ -271,7 +271,7 @@ static const struct line6_properties variax_properties_table[] = {
 		.id = "Variax",
 		.name = "Variax Workbench",
 		.capabilities	= LINE6_CAP_CONTROL
-				| LINE6_CAP_CONTROL_MIDI,
+				| LINE6_CAP_CONTROL_LEGACY,
 		.altsetting = 1,
 		.ep_ctrl_r = 0x82,
 		.ep_ctrl_w = 0x01,
-- 
1.9.1

